####################################################################################

# Todo

https://www.python.org/dev/peps/pep-0008/
Create sqlqueries wrapped within sqlmodel()
Test sqlmodel()
Create config file and write a function to check to see which backend to use
Read this thoroughly: https://www.learnpyqt.com/courses/model-views/modelview-architecture/
Create model as a sub class of QAbstractTableModel
Test model using sql backend
Create UI
Create ViewController
Test ViewController

Create server
Test Server
Create servermodel()
Add upnp to the servermodel
Test model using server backend
Add settings to ViewController to edit config file
Test settings

Create build script
Make a logo
Write a proper readme(this should be displayed on github and also copied into the application folder when building)


#####################################################################################

# Build

server folder and a client folder

copy sqlmodel to both folders

http://www.pyinstaller.org/
https://github.com/mherrmann/fbs-tutorial

#####################################################################################

# Database

schema -> version(int)
user -> userid, username, passwordhash
note -> noteid, notetitle, notecontents, userid


#####################################################################################

# Server
implements a rest api. uses a copy of sqlmodel to comunicate with sql database.

query called checkpassword. this query is only used by the server version of the database.
if username exists checks provided password hash equals stored password hash.
if passwords match then create a unique session id, store it as a local variable and send a copy to the client
every request the client makes should contain the session id. check the session id is valid before executing request.
you could have a function called checkSessionId

#####################################################################################

# Client Model
inherits from QAbstractTableModel
gets data from and saves data to backend

if config is web backend = webmodel
else backend = sqlmodel

sqlmodel does nothing but run sql queries and return them to the modelview
webmodel sends data from the model to the server and returns data from the server to the model

have an authentication method. this will only be run if backend = webmodel

getnotes()
addnote()
editnote()
deletenote()

#####################################################################################

# ViewController - PYQT
if config is set to web backend an signup/login screen should be shown when the application is first launched
store the hash of the users password in a local file. if this file exists login automatically.
if there is a problem auto logging in bring up the signup/login screen


#####################################################################################


https://www.learnpyqt.com/
