#####################################################################################

# Build

server folder and a client folder

copy sqlqueries to both folders

http://www.pyinstaller.org/

#####################################################################################

# Database

schema -> version(int)
user -> userid, username, passwordhash
note -> noteid, notetitle, notecontents, userid


#####################################################################################

# Server
implements a rest api. stores and retrieves data from an sql database.
the actual sql queries are stored in a seperate file that is shared with the non web version of the client side backend.

query called checkpassword. this query is only used by the server version of the database.
if username exists checks provided password hash equals stored password hash.
if passwords match then create a unique session id, store it as a local variable and send a copy to the client
every request the client makes should contain the session id. check the session id is valid before executing request.
you could have a function called checkSessionId

#####################################################################################

# Client Model
implement the backend using an abstract base class. this class itself inherits from QAbstractTableModel

make 2 sublasses:

one subclass sends data to and requests data from the server.

the other subclass stores things and retrieves things from a sql database.
the actual sql queries are stored in a seperate file.
load the queries like this:

def executeScriptsFromFile(filename):
	# Open and read the file as a single buffer
	fd = open(filename, 'r')
	sqlFile = fd.read()
	fd.close()

	# all SQL commands (split on ';')
	sqlCommands = sqlFile.split(';')

	command = sqlCommands[x]

	# use this to add relevant data to sql query
	# command.replace("userid", id)

#####################################################################################

# ViewController - PYQT
if config is web backend = webmodel
else backend = sqlmodel

#####################################################################################

https://www.learnpyqt.com/courses/model-views/modelview-architecture/
https://www.learnpyqt.com/
